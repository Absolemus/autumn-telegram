#Использовать autumn

#Область Переменные

&Пластилин(Значение = "ХранительНавыков", Тип = "Массив")
Перем ХранителиНавыков;
Перем Навыки; 
Перем Параметры;

#КонецОбласти

#Область ОбработчикиСобытий

&Желудь
Процедура ПриСозданииОбъекта()
	Навыки = Новый ТаблицаЗначений;
	Навыки.Колонки.Добавить("Имя");
	Навыки.Колонки.Добавить("Метод");
	Навыки.Колонки.Добавить("Параметры");
	Навыки.Колонки.Добавить("Желудь");

	Параметры = Новый ТаблицаЗначений;
	Параметры.Колонки.Добавить("Имя");
КонецПроцедуры

Процедура ПриЗапускеПриложения() Экспорт
	Для Каждого ХранительНавыков Из ХранителиНавыков Цикл
		РефлекторОбъекта = РефлекторЖелудя(ХранительНавыков);
		РефлекторНавыки = РефлекторОбъекта.ПолучитьТаблицуМетодов("Навык");
		Для Каждого Навык Из РефлекторНавыки Цикл
			НавыкАннотация = РаботаСАннотациями.ПолучитьАннотацию(Навык, "Навык");
			ИмяМетода = РаботаСАннотациями.ПолучитьЗначениеПараметраАннотации(НавыкАннотация);

			НовыйНавык = Навыки.Добавить();
			НовыйНавык.Имя = Навык.Имя;	
			НовыйНавык.Метод = ИмяМетода;
			НовыйНавык.Параметры = Параметры;
			НовыйНавык.Желудь = ХранительНавыков;

			Для Каждого Параметр Из Навык.Параметры Цикл
				НовыйПараметр = НовыйНавык.Параметры.Добавить();
				НовыйПараметр.Имя = Параметр.Имя;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Вызов метода навыка
// Параметры:
// 		ИмяМетода - строка - имя метода
// 		ПараметрыМетода - соответствие - параметры метода
Процедура ВызватьМетод(ИмяМетода, ПараметрыМетода = Неопределено) Экспорт
	Инфо = Навыки.Найти(ИмяМетода, "Имя");
	Если Инфо = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Метод %1 не найден", ИмяМетода);
	Иначе
		Рефлектор = Новый Рефлектор;
		Если ЗначениеЗаполнено(ПараметрыМетода) Тогда
			МассивПараметров = Новый Массив;
			Для Каждого Параметр Из Инфо.Параметры Цикл
				Если ПараметрыМетода[Параметр.Имя] <> Неопределено Тогда
					МассивПараметров.Добавить(ПараметрыМетода[Параметр.Имя]);
				КонецЕсли;
			КонецЦикла;	
			Рефлектор.ВызватьМетод(Инфо.Желудь, ИмяМетода, МассивПараметров);
		Иначе
			Рефлектор.ВызватьМетод(Инфо.Желудь, ИмяМетода);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РефлекторЖелудя(Желудь)
	Возврат Новый РефлекторОбъекта(ТипЗнч(Желудь));
КонецФункции

#КонецОбласти